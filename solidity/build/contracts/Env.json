{
  "contractName": "Env",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "test_stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_revert",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_invalid",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testOpcodes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"testOpcodes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_revert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_invalid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/stephanie/chainsafe/attalus/solidity/contracts/blocks.sol\":\"Env\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol\":{\"keccak256\":\"0x9a8001897ada7e0b3f948322b08b5f0d733c043570a445cf53ac23d58bf52dbc\",\"urls\":[\"bzzr://06097e06f5f60ea2e9b630e56d73436d7155fa659275ee0bac3fb6677cd991a3\"]},\"/home/stephanie/chainsafe/attalus/solidity/contracts/blocks.sol\":{\"keccak256\":\"0x55cd8668851b203be8a35c92616998ffa7220fdb67ad52bc17aae7f5cbd68a27\",\"urls\":[\"bzzr://793825659c66c572fc310bc5f6da5f064ad3e83c849d4ad9bdeb490e3076776d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060a28061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c8063391521f414604b57806355313dea1460535780636d3d141614605b578063b9d1e5aa146063575b600080fd5b6051606b565b005b6059606d565b005b6061606f565b005b60696074565b005b565b005b600080fd5bfefea165627a7a72305820bbbd5157053f11ac54036858b9d46b21aa8697a1470c89fd2088b04d1faa1dce0029",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060465760003560e01c8063391521f414604b57806355313dea1460535780636d3d141614605b578063b9d1e5aa146063575b600080fd5b6051606b565b005b6059606d565b005b6061606f565b005b60696074565b005b565b005b600080fd5bfefea165627a7a72305820bbbd5157053f11ac54036858b9d46b21aa8697a1470c89fd2088b04d1faa1dce0029",
  "sourceMap": "49:425:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:425:5;;;;;;;",
  "deployedSourceMap": "49:425:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:425:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:378;;;:::i;:::-;;374:50:1;;;:::i;:::-;;252:58;;;:::i;:::-;;314:56;;;:::i;:::-;;93:378:5;138:328::o;374:50:1:-;414:6;252:58;304:1;301;294:12;314:56;357:9",
  "source": "import \"./Abstracts/TestContractInterface.sol\";\n\ncontract Env is TestContractInterface {\n\n\n  function testOpcodes() public {\n\n    assembly{\n        pop(address())\n        pop(balance(address()))\n        pop(origin())\n        pop(gasprice())\n        pop(number())\n\n        //blockhash of previous block\n        pop(blockhash(sub(number(),1)))\n        pop(coinbase())\n        pop(timestamp())\n        pop(difficulty())\n        pop(gaslimit())\n        pop(gas())\n\n    }\n\n  }\n\n}",
  "sourcePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/blocks.sol",
  "ast": {
    "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/blocks.sol",
    "exportedSymbols": {
      "Env": [
        189
      ]
    },
    "id": 190,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 181,
        "nodeType": "ImportDirective",
        "scope": 190,
        "sourceUnit": 55,
        "src": "0:47:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 182,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54,
              "src": "65:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$54",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 183,
            "nodeType": "InheritanceSpecifier",
            "src": "65:21:5"
          }
        ],
        "contractDependencies": [
          54
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 189,
        "linearizedBaseContracts": [
          189,
          54
        ],
        "name": "Env",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "123:348:5",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 186,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    pop(address())\n    pop(balance(address()))\n    pop(origin())\n    pop(gasprice())\n    pop(number())\n    pop(blockhash(sub(number(), 1)))\n    pop(coinbase())\n    pop(timestamp())\n    pop(difficulty())\n    pop(gaslimit())\n    pop(gas())\n}",
                  "src": "130:336:5"
                }
              ]
            },
            "documentation": null,
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "113:2:5"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "123:0:5"
            },
            "scope": 189,
            "src": "93:378:5",
            "stateMutability": "nonpayable",
            "superFunction": 38,
            "visibility": "public"
          }
        ],
        "scope": 190,
        "src": "49:425:5"
      }
    ],
    "src": "0:474:5"
  },
  "legacyAST": {
    "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/blocks.sol",
    "exportedSymbols": {
      "Env": [
        189
      ]
    },
    "id": 190,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 181,
        "nodeType": "ImportDirective",
        "scope": 190,
        "sourceUnit": 55,
        "src": "0:47:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 182,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54,
              "src": "65:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$54",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 183,
            "nodeType": "InheritanceSpecifier",
            "src": "65:21:5"
          }
        ],
        "contractDependencies": [
          54
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 189,
        "linearizedBaseContracts": [
          189,
          54
        ],
        "name": "Env",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "123:348:5",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 186,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    pop(address())\n    pop(balance(address()))\n    pop(origin())\n    pop(gasprice())\n    pop(number())\n    pop(blockhash(sub(number(), 1)))\n    pop(coinbase())\n    pop(timestamp())\n    pop(difficulty())\n    pop(gaslimit())\n    pop(gas())\n}",
                  "src": "130:336:5"
                }
              ]
            },
            "documentation": null,
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "113:2:5"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "123:0:5"
            },
            "scope": 189,
            "src": "93:378:5",
            "stateMutability": "nonpayable",
            "superFunction": 38,
            "visibility": "public"
          }
        ],
        "scope": 190,
        "src": "49:425:5"
      }
    ],
    "src": "0:474:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-21T17:50:59.031Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}