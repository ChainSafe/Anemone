{
  "contractName": "DelegateCall",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "test_stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_revert",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_invalid",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testOpcodes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"testOpcodes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_revert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_invalid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/stephanie/chainsafe/attalus/solidity/contracts/delegatecall.sol\":\"DelegateCall\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/CalledContract.sol\":{\"keccak256\":\"0xceec54476e888d08c90d912e731a102f96d541e5aa67bfadc262fda2bc82284a\",\"urls\":[\"bzzr://b2c6ffaf0e7019aca251f28af745024144ef6e6db27e54499ba9c8e23f5dfef2\"]},\"/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol\":{\"keccak256\":\"0x9a8001897ada7e0b3f948322b08b5f0d733c043570a445cf53ac23d58bf52dbc\",\"urls\":[\"bzzr://06097e06f5f60ea2e9b630e56d73436d7155fa659275ee0bac3fb6677cd991a3\"]},\"/home/stephanie/chainsafe/attalus/solidity/contracts/delegatecall.sol\":{\"keccak256\":\"0x21277b5d8b03842176c022d70d84cda60c5f18ea6a792d2c2eeebd929adc8289\",\"urls\":[\"bzzr://4b2bfe5fb5c17f21a6b7ff4f4595076191ee2f1cd46289acc6d500f9b2c947ac\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161001d9061007e565b604051809103906000f080158015610039573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008a565b6052806101d983390190565b610140806100996000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063391521f41461005157806355313dea1461005b5780636d3d141614610065578063b9d1e5aa1461006f575b600080fd5b610059610079565b005b61006361010b565b005b61006d61010d565b005b610077610112565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060405180807f697353616d654164647265737328616464726573732c61646472657373290000815250601e01905060405180910390209050600033905060405182815281600482015281602482015260648101604052602081604483600088611388f15050505050565b005b600080fd5bfefea165627a7a72305820fa5c877fbdb6408d8e209891b8762f9dd5d1417a87a72f13e70ad9e89252184200296080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a723058201ddef558ee1a541c84d2306fce8b0c4e35863b35649e130ef4f9186fd24857000029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063391521f41461005157806355313dea1461005b5780636d3d141614610065578063b9d1e5aa1461006f575b600080fd5b610059610079565b005b61006361010b565b005b61006d61010d565b005b610077610112565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060405180807f697353616d654164647265737328616464726573732c61646472657373290000815250601e01905060405180910390209050600033905060405182815281600482015281602482015260648101604052602081604483600088611388f15050505050565b005b600080fd5bfefea165627a7a72305820fa5c877fbdb6408d8e209891b8762f9dd5d1417a87a72f13e70ad9e8925218420029",
  "sourceMap": "90:1629:10:-;;;192:69;8:9:-1;5:2;;;30:1;27;20:12;5:2;192:69:10;236:20;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;236:20:10;219:14;;:37;;;;;;;;;;;;;;;;;;90:1629;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "90:1629:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;90:1629:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:1449;;;:::i;:::-;;374:50:1;;;:::i;:::-;;252:58;;;:::i;:::-;;314:56;;;:::i;:::-;;265:1449:10;459:20;490:14;;;;;;;;;;;459:46;;511:10;531:43;;;;;;;;;;;;;;;;;;;511:64;;602:9;614:10;602:22;;669:4;663:11;759:3;755;748:15;854:1;848:4;844:3;840:13;833:23;940:1;934:4;930:3;926:13;919:23;1045:4;1041:3;1037:13;1032:4;1025:26;1663:4;1598:3;1521:4;1450:3;1395:1;1346:12;1297:4;1266:402;641:1068;;;;;:::o;374:50:1:-;414:6;252:58;304:1;301;294:12;314:56;357:9",
  "source": "import \"./Abstracts/CalledContract.sol\";\nimport \"./Abstracts/TestContractInterface.sol\";\n\ncontract DelegateCall is CalledContract, TestContractInterface {\n\n  CalledContract calledContract;\n\n  constructor() public {\n    calledContract = new CalledContract();\n  }\n\n  function testOpcodes() public {\n\n    //thank u stack overflow\n    //https://ethereum.stackexchange.com/questions/67980/solidity-assembly-function-call-parameter-alignment?noredirect=1&lq=1\n\n    address contractAddr = address(calledContract);\n    bytes4 sig = bytes4(keccak256(\"isSameAddress(address,address)\")); //Function signature\n    address a = msg.sender;\n\n     assembly {\n         let ptr := mload(0x40)       //Find empty storage location using \"free memory pointer\"\n         mstore(ptr,sig)              //Place signature at begining of empty storage\n         mstore(add(ptr,0x04),a)      //First address parameter. just after signature\n         mstore(add(ptr,0x24),a)      //2nd address parameter - first padded. add 32 bytes (not 20 bytes)\n         mstore(0x40,add(ptr,0x64))   //Reset free pointer before the function call so we can actually use it!\n                                      //New free pointer position after the output values of the called function.\n\n         let success := call(\n                         5000,         //5k gSas\n                         contractAddr, //To addr\n                         0,            //No wei passed\n                         ptr,          //Inputs are at location of ptr\n                         0x44,         //Inputs size two padded, so 68 bytes\n                         ptr,          //Store output over input\n                         0x20)         //Output is 32 bytes long\n     }\n\n  }\n  \n}\n",
  "sourcePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/delegatecall.sol",
  "ast": {
    "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/delegatecall.sol",
    "exportedSymbols": {
      "DelegateCall": [
        346
      ]
    },
    "id": 347,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/CalledContract.sol",
        "file": "./Abstracts/CalledContract.sol",
        "id": 304,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 21,
        "src": "0:40:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 55,
        "src": "41:47:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "CalledContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "115:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CalledContract_$20",
                "typeString": "contract CalledContract"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "115:14:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54,
              "src": "131:21:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$54",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "131:21:10"
          }
        ],
        "contractDependencies": [
          20,
          54
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 346,
        "linearizedBaseContracts": [
          346,
          54,
          20
        ],
        "name": "DelegateCall",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "calledContract",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "158:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CalledContract_$20",
              "typeString": "contract CalledContract"
            },
            "typeName": {
              "contractScope": null,
              "id": 310,
              "name": "CalledContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "158:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CalledContract_$20",
                "typeString": "contract CalledContract"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "213:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "calledContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "219:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CalledContract_$20",
                        "typeString": "contract CalledContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "236:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CalledContract_$20_$",
                          "typeString": "function () returns (contract CalledContract)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 315,
                          "name": "CalledContract",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 20,
                          "src": "240:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CalledContract_$20",
                            "typeString": "contract CalledContract"
                          }
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "236:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CalledContract_$20",
                        "typeString": "contract CalledContract"
                      }
                    },
                    "src": "219:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CalledContract_$20",
                      "typeString": "contract CalledContract"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "219:37:10"
                }
              ]
            },
            "documentation": null,
            "id": 321,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:10"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:10"
            },
            "scope": 346,
            "src": "192:69:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "295:1419:10",
              "statements": [
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "name": "contractAddr",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "459:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 327,
                        "name": "calledContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "490:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CalledContract_$20",
                          "typeString": "contract CalledContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CalledContract_$20",
                          "typeString": "contract CalledContract"
                        }
                      ],
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "482:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "459:46:10"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "name": "sig",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "511:10:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "511:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 337,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "697353616d654164647265737328616464726573732c6164647265737329",
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "541:32:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_161e71502cfa7ac78ebef094d81dd09ef9cf93cf206fa05a6d6410c0861e3d96",
                              "typeString": "literal_string \"isSameAddress(address,address)\""
                            },
                            "value": "isSameAddress(address,address)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_161e71502cfa7ac78ebef094d81dd09ef9cf93cf206fa05a6d6410c0861e3d96",
                              "typeString": "literal_string \"isSameAddress(address,address)\""
                            }
                          ],
                          "id": 333,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "531:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "531:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "524:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": "bytes4"
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "524:51:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "511:64:10"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "602:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "602:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 340,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "614:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "614:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "602:22:10"
                },
                {
                  "externalReferences": [
                    {
                      "sig": {
                        "declaration": 331,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "759:3:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "a": {
                        "declaration": 339,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "940:1:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "a": {
                        "declaration": 339,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "854:1:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "contractAddr": {
                        "declaration": 325,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1346:12:10",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 343,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    mstore(ptr, sig)\n    mstore(add(ptr, 0x04), a)\n    mstore(add(ptr, 0x24), a)\n    mstore(0x40, add(ptr, 0x64))\n    let success := call(5000, contractAddr, 0, ptr, 0x44, ptr, 0x20)\n}",
                  "src": "632:1077:10"
                }
              ]
            },
            "documentation": null,
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:10"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:10"
            },
            "scope": 346,
            "src": "265:1449:10",
            "stateMutability": "nonpayable",
            "superFunction": 38,
            "visibility": "public"
          }
        ],
        "scope": 347,
        "src": "90:1629:10"
      }
    ],
    "src": "0:1720:10"
  },
  "legacyAST": {
    "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/delegatecall.sol",
    "exportedSymbols": {
      "DelegateCall": [
        346
      ]
    },
    "id": 347,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/CalledContract.sol",
        "file": "./Abstracts/CalledContract.sol",
        "id": 304,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 21,
        "src": "0:40:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 55,
        "src": "41:47:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "CalledContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "115:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CalledContract_$20",
                "typeString": "contract CalledContract"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "115:14:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 308,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54,
              "src": "131:21:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$54",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "131:21:10"
          }
        ],
        "contractDependencies": [
          20,
          54
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 346,
        "linearizedBaseContracts": [
          346,
          54,
          20
        ],
        "name": "DelegateCall",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 311,
            "name": "calledContract",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "158:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CalledContract_$20",
              "typeString": "contract CalledContract"
            },
            "typeName": {
              "contractScope": null,
              "id": 310,
              "name": "CalledContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "158:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CalledContract_$20",
                "typeString": "contract CalledContract"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "213:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "calledContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "219:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CalledContract_$20",
                        "typeString": "contract CalledContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "236:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CalledContract_$20_$",
                          "typeString": "function () returns (contract CalledContract)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 315,
                          "name": "CalledContract",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 20,
                          "src": "240:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CalledContract_$20",
                            "typeString": "contract CalledContract"
                          }
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "236:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CalledContract_$20",
                        "typeString": "contract CalledContract"
                      }
                    },
                    "src": "219:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CalledContract_$20",
                      "typeString": "contract CalledContract"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "219:37:10"
                }
              ]
            },
            "documentation": null,
            "id": 321,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:10"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:10"
            },
            "scope": 346,
            "src": "192:69:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "295:1419:10",
              "statements": [
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "name": "contractAddr",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "459:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 327,
                        "name": "calledContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "490:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CalledContract_$20",
                          "typeString": "contract CalledContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CalledContract_$20",
                          "typeString": "contract CalledContract"
                        }
                      ],
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "482:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "459:46:10"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "name": "sig",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "511:10:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "511:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 337,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "697353616d654164647265737328616464726573732c6164647265737329",
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "541:32:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_161e71502cfa7ac78ebef094d81dd09ef9cf93cf206fa05a6d6410c0861e3d96",
                              "typeString": "literal_string \"isSameAddress(address,address)\""
                            },
                            "value": "isSameAddress(address,address)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_161e71502cfa7ac78ebef094d81dd09ef9cf93cf206fa05a6d6410c0861e3d96",
                              "typeString": "literal_string \"isSameAddress(address,address)\""
                            }
                          ],
                          "id": 333,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 483,
                          "src": "531:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "531:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "524:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": "bytes4"
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "524:51:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "511:64:10"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "name": "a",
                      "nodeType": "VariableDeclaration",
                      "scope": 344,
                      "src": "602:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "602:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 340,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 489,
                      "src": "614:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "614:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "602:22:10"
                },
                {
                  "externalReferences": [
                    {
                      "sig": {
                        "declaration": 331,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "759:3:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "a": {
                        "declaration": 339,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "940:1:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "a": {
                        "declaration": 339,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "854:1:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "contractAddr": {
                        "declaration": 325,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1346:12:10",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 343,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    mstore(ptr, sig)\n    mstore(add(ptr, 0x04), a)\n    mstore(add(ptr, 0x24), a)\n    mstore(0x40, add(ptr, 0x64))\n    let success := call(5000, contractAddr, 0, ptr, 0x44, ptr, 0x20)\n}",
                  "src": "632:1077:10"
                }
              ]
            },
            "documentation": null,
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:10"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:10"
            },
            "scope": 346,
            "src": "265:1449:10",
            "stateMutability": "nonpayable",
            "superFunction": 38,
            "visibility": "public"
          }
        ],
        "scope": 347,
        "src": "90:1629:10"
      }
    ],
    "src": "0:1720:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-21T17:50:59.033Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}