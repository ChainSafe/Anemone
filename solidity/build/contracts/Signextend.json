{
  "contractName": "Signextend",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "test_stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_revert",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "test_invalid",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testOpcodes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"testOpcodes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_revert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"test_invalid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/stephanie/chainsafe/attalus/solidity/contracts/signextend.sol\":\"Signextend\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol\":{\"keccak256\":\"0x9a8001897ada7e0b3f948322b08b5f0d733c043570a445cf53ac23d58bf52dbc\",\"urls\":[\"bzzr://06097e06f5f60ea2e9b630e56d73436d7155fa659275ee0bac3fb6677cd991a3\"]},\"/home/stephanie/chainsafe/attalus/solidity/contracts/signextend.sol\":{\"keccak256\":\"0x7163725580e71e71a3eab7718f307fd9548c4341ae247a925481ee083a3885cb\",\"urls\":[\"bzzr://1e368f5d883c805fb80b5ab55e9f74f828647f1522c4a31bc39e2dbb3ee8b72b\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060a28061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c8063391521f414604b57806355313dea1460535780636d3d141614605b578063b9d1e5aa146063575b600080fd5b6051606b565b005b6059606d565b005b6061606f565b005b60696074565b005b565b005b600080fd5bfefea165627a7a723058204e927dfe588259d66ed1ab34b970039a9f212a6d314e256bc7c68687046a19130029",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060465760003560e01c8063391521f414604b57806355313dea1460535780636d3d141614605b578063b9d1e5aa146063575b600080fd5b6051606b565b005b6059606d565b005b6061606f565b005b60696074565b005b565b005b600080fd5bfefea165627a7a723058204e927dfe588259d66ed1ab34b970039a9f212a6d314e256bc7c68687046a19130029",
  "sourceMap": "49:128:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:128:14;;;;;;;",
  "deployedSourceMap": "49:128:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:128:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;100:74;;;:::i;:::-;;374:50:1;;;:::i;:::-;;252:58;;;:::i;:::-;;314:56;;;:::i;:::-;;100:74:14;145:24::o;374:50:1:-;414:6;252:58;304:1;301;294:12;314:56;357:9",
  "source": "import \"./Abstracts/TestContractInterface.sol\";\n\ncontract Signextend is TestContractInterface {\n\n\n  function testOpcodes() public {\n\n    assembly{ pop(signextend(1,10))}\n\n  }\n\n}",
  "sourcePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/signextend.sol",
  "ast": {
    "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/signextend.sol",
    "exportedSymbols": {
      "Signextend": [
        464
      ]
    },
    "id": 465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 456,
        "nodeType": "ImportDirective",
        "scope": 465,
        "sourceUnit": 55,
        "src": "0:47:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 457,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54,
              "src": "72:21:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$54",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 458,
            "nodeType": "InheritanceSpecifier",
            "src": "72:21:14"
          }
        ],
        "contractDependencies": [
          54
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 464,
        "linearizedBaseContracts": [
          464,
          54
        ],
        "name": "Signextend",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "130:44:14",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 461,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    pop(signextend(1, 10))\n}",
                  "src": "137:32:14"
                }
              ]
            },
            "documentation": null,
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "120:2:14"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "130:0:14"
            },
            "scope": 464,
            "src": "100:74:14",
            "stateMutability": "nonpayable",
            "superFunction": 38,
            "visibility": "public"
          }
        ],
        "scope": 465,
        "src": "49:128:14"
      }
    ],
    "src": "0:177:14"
  },
  "legacyAST": {
    "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/signextend.sol",
    "exportedSymbols": {
      "Signextend": [
        464
      ]
    },
    "id": 465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/stephanie/chainsafe/attalus/solidity/contracts/Abstracts/TestContractInterface.sol",
        "file": "./Abstracts/TestContractInterface.sol",
        "id": 456,
        "nodeType": "ImportDirective",
        "scope": 465,
        "sourceUnit": 55,
        "src": "0:47:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 457,
              "name": "TestContractInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54,
              "src": "72:21:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestContractInterface_$54",
                "typeString": "contract TestContractInterface"
              }
            },
            "id": 458,
            "nodeType": "InheritanceSpecifier",
            "src": "72:21:14"
          }
        ],
        "contractDependencies": [
          54
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 464,
        "linearizedBaseContracts": [
          464,
          54
        ],
        "name": "Signextend",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "130:44:14",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 461,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    pop(signextend(1, 10))\n}",
                  "src": "137:32:14"
                }
              ]
            },
            "documentation": null,
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOpcodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "120:2:14"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "130:0:14"
            },
            "scope": 464,
            "src": "100:74:14",
            "stateMutability": "nonpayable",
            "superFunction": 38,
            "visibility": "public"
          }
        ],
        "scope": 465,
        "src": "49:128:14"
      }
    ],
    "src": "0:177:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-21T17:50:59.037Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}